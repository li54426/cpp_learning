        int len = prices.size();
        if(len <= 1) return 0;
        vector<vector<int> > dp(len, vector<int> (3, 0));
        //dp is has   && not has
        dp[0][0] = -prices[0];
        dp[0][1] = 0;

        //dp[][3] == 1 is sell it
        for(int i =1; i<len ; i++){
            /*
            if(dp[i-1][2] == 0){
                dp[i][0] = max(dp[i-1][0], dp[i-1][1] - prices[i]);
                dp[i][1] = max(dp[i-1][1], dp[i-1][0] +prices[i]);
                dp[i][2] = dp[i-1][1] > dp[i-1][0] +prices[i] ? 0 : 1;
            }
            else{
                dp[i][0] = -prices[i];
                dp[i][1] = dp[i-1][1];
                dp[i][2] = 0;
            }
            cout<< dp[i][0] <<dp[i][1] << dp[i][2] << endl;
            */
            if(i>2){
                 dp[i][0] = max(dp[i-1][0], dp[i-2][1] - prices[i]);
                dp[i][1] = max(dp[i-1][1], dp[i-1][0] + prices[i]);
            }
            else{

           
            dp[i][0] = max(dp[i-1][0], -prices[i]);
            dp[i][1] = max(dp[i-1][1], dp[i-1][0] + prices[i]);
            }


        }
        return dp[len-1][1];